
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author win 10
 */
public class Modify2 extends javax.swing.JFrame {

    /**
     * Creates new form Modify2
     */
    public Modify2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        cb1 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        tf1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tf2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        t1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cb3 = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        tf3 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tf4 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        lb1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cb4 = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jLabel4.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Modify what  :");
        jLabel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cb1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        cb1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Name", "EmailId", "MobileNo", "DOJ", "RoomNo" }));

        jLabel5.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Old Value  :");
        jLabel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tf1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        tf1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("New Value  :");
        jLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tf2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        jButton1.setText("UPDATE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton3.setText("RESET");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Room no", "Date of payment", "Mode of Payment", "Amount", "Month"
            }
        ));
        jScrollPane2.setViewportView(table1);

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        jLabel3.setText("Name :");

        t1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Modify what  :");
        jLabel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cb3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        cb3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DateofPayment", "ModeofPayment", "Amount", "Month" }));
        cb3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb3ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Old Value  :");
        jLabel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tf3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        tf3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf3ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("New Value  :");
        jLabel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tf4.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        jButton4.setText("UPDATE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton5.setText("RESET");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        lb1.setForeground(new java.awt.Color(255, 0, 0));

        jLabel9.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        jLabel9.setText("Month:");

        cb4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "january", "febuary", "march", "april", "may", "june", "july", "august", "september", "october", "november", "december" }));
        cb4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb4ActionPerformed(evt);
            }
        });

        jButton2.setText("SEARCH");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("MODIFY FEE RECORD");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(437, 437, 437)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(114, 114, 114)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(274, 274, 274)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(230, 230, 230)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tf4, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                                .addComponent(cb3, 0, 202, Short.MAX_VALUE)
                                .addComponent(tf3, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                                .addComponent(lb1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(70, 70, 70))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(183, 183, 183)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(49, 49, 49)
                                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(77, 77, 77)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cb4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(168, 168, 168)))
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 872, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(47, 47, 47))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tf4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lb1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void t1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t1ActionPerformed

    private void tf1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String nm=t1.getText();
        String cb=cb1.getSelectedItem().toString();
        String Odata=tf1.getText();
        String Ndata=tf2.getText();
        int i=table1.getSelectedRow();
        TableModel model=table1.getModel();
        try{
            Connection con=Data.connect();

            if(cb.equals("Name")){

                model.setValueAt(Ndata,i, 0);
                String s5= model.getValueAt(i, 4).toString();
                // String s1= model.getValueAt(i, 0).toString();
                String sql= "update entry set name=? where name='"+Odata+"' and rno=? ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                p.setString(2,s5);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "This Name don't exists in your record");
                }

            }

            if(cb.equals("EmailId")){
                model.setValueAt(Ndata,i, 2);
                //String s5= model.getValueAt(i, 2).toString();
                String sql= "update entry set email=? where email=? and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                p.setString(2,Odata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, " EmailId don't exists in your record");
                }

            }

            if(cb.equals("MobileNo")){
                model.setValueAt(Ndata,i, 1);
                // String s5= model.getValueAt(i, 1).toString();
                String sql= "update entry set mob=?  where mob='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Mobile no. don't exists in your record");
                }

            }

            if(cb.equals("DOJ")){
                model.setValueAt(Ndata,i, 3);
                //String s5= model.getValueAt(i, 3).toString();
                SimpleDateFormat f1=new SimpleDateFormat("yyyy-mm-dd");

                String sql= "update entry set joinD='"+Ndata+"' where joinD='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                // p.setDate(1, sd);
                //p.setDate(2,s);
                int n=p.executeUpdate();
                System.out.print("date"+n);
                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Joining Date don't exists in your record");
                }

            }

            if(cb.equals("RoomNo")){
                model.setValueAt(Ndata,i, 4);
                //String s5= model.getValueAt(i, 4).toString();
                String sql= "update entry set rno=? where rno='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                int n=p.executeUpdate();

                String ss="update roomview set vacancy=vacancy-1 where room='"+Ndata+"'";
                PreparedStatement p1=con.prepareStatement(ss);
                p1.executeUpdate();
                String sq="update roomview set vacancy=vacancy+1 where room='"+Odata+"'";
                PreparedStatement p2=con.prepareStatement(sq);
                p2.executeUpdate();
                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "RoomNo. don't exists in your record");
                }

            }

        }
        catch(Exception e){
            e.printStackTrace();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        t1.setText(" ");
        DefaultTableModel model=(DefaultTableModel)table1.getModel();
        model.setRowCount(0);
        tf1.setText(" ");
        tf2.setText(" ");
        cb1.setSelectedIndex(-1);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tf3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        String nm=t1.getText();
        String cb=cb3.getSelectedItem().toString();
        String cb1=cb4.getSelectedItem().toString();
        String Odata=tf3.getText();
        String Ndata=tf4.getText();
        int i=table1.getSelectedRow();
        TableModel model=table1.getModel();
        try{
            Connection con=Data.connect();

if(cb1.equals("january")){

                if(cb.equals("Month")){
                
                String sq= model.getValueAt(i, 0).toString();     //name
                String sw= model.getValueAt(i, 1).toString();       //room no.
                String se= model.getValueAt(i, 2).toString();       //dop   
                //  SimpleDateFormat f1=new SimpleDateFormat("dd-mm-yyyy");
              //TableCellRenderer renderer=new FormatRenderer(fl);
                //System.out.println(se);
                String sr= model.getValueAt(i, 3).toString();       //mop
                String st= model.getValueAt(i, 4).toString();       //amount
                String sy= model.getValueAt(i, 5).toString();        //month   
                 model.setValueAt(Ndata,i, 5);
                 String su=model.getValueAt(i,5).toString();      //month(updated)
                String sql= "delete from january where room='"+sw+"' and month='"+Odata+"' and name='"+nm+"'";
                PreparedStatement p=con.prepareStatement(sql);
                int n=p.executeUpdate();
              
                
                
                String sq1="insert into $january(name,room,dd,mop,amount,month) values(?,?,'"+se+"',?,?,?)";
                  
                  String query=sq1.replace("$january", Ndata);
                  PreparedStatement ps=con.prepareStatement(query);
                  ps.setString(1,sq);
                 //Convert string to date
                      
              //    SimpleDateFormat f1=new SimpleDateFormat("dd-mm-yyyy");
                //        java.util.Date date= f1.parse(se);
                  //      java.sql.Date sd=new java.sql.Date(date.getTime());
                        // ps.setString(3, se);
                   
                        ps.setString(2,sw);
                        
                        ps.setString(3,sr);
           
                        ps.setString(4, st);
                        ps.setString(5,su);
                       int ni= ps.executeUpdate();
                    //   JOptionPane.showMessageDialog(null, "SUCCESFULLY DEPOSITED");
                
                        
                        
                        if(n!=0 && ni!=0)
                {
                    JOptionPane.showMessageDialog(null, "SUCCESFULLY CHANGED MONTH FROM "+Odata+" To " +Ndata);

                }

                else{
                    JOptionPane.showMessageDialog(null, "ALREADY UPDATED DATA");
                }

            }

    
    if(cb.equals("Amount")){
                model.setValueAt(Ndata,i, 4);
                String sql= "update january set amount=? where amount=? and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                p.setString(2,Odata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Such Amount dont exist in your record");
                }

            }

            if(cb.equals("ModeofPayment")){
                model.setValueAt(Ndata,i, 3);
                 String sql= "update january set mop=?  where mop='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "This mode of payment don't exists in your record");
                }

            }

            if(cb.equals("DateofPayment")){
                model.setValueAt(Ndata,i, 2);
                String sql= "update january set dd='"+Ndata+"' where dd='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                 int n=p.executeUpdate();
                System.out.print("date"+n);
                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Payment Date don't exists in your record");
                }

            }

}

if(cb1.equals("febuary")){
      if(cb.equals("Month")){
                
                String sq= model.getValueAt(i, 0).toString();     //name
                String sw= model.getValueAt(i, 1).toString();       //room no.
                String se= model.getValueAt(i, 2).toString();       //dop   
                String sr= model.getValueAt(i, 3).toString();       //mop
                String st= model.getValueAt(i, 4).toString();       //amount
                String sy= model.getValueAt(i, 5).toString();        //month   
                 model.setValueAt(Ndata,i, 5);
                 String su=model.getValueAt(i,5).toString();      //month(updated)
                String sql= "delete from febuary where room='"+sw+"' and month='"+Odata+"' and name='"+nm+"'";
                PreparedStatement p=con.prepareStatement(sql);
                int n=p.executeUpdate();
                String sq1="insert into $febuary(name,room,dd,mop,amount,month) values(?,?,'"+se+"',?,?,?)";
                  String query=sq1.replace("$febuary", Ndata);
                  PreparedStatement ps=con.prepareStatement(query);
                  ps.setString(1,sq);
                        ps.setString(2,sw);
                        ps.setString(3,sr);
                        ps.setString(4, st);
                        ps.setString(5,su);
                       int ni= ps.executeUpdate();
                        if(n!=0 && ni!=0)
                {
                    JOptionPane.showMessageDialog(null, "SUCCESFULLY CHANGED MONTH FROM "+Odata+" To " +Ndata);

                }

                else{
                    JOptionPane.showMessageDialog(null, "ALREADY UPDATED DATA");
                }

            }
    
    if(cb.equals("Amount")){
                model.setValueAt(Ndata,i, 4);
                String sql= "update febuary set amount=? where amount=? and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                p.setString(2,Odata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Such Amount dont exist in your record");
                }

            }

            if(cb.equals("ModeofPayment")){
                model.setValueAt(Ndata,i, 3);
                 String sql= "update febuary set mop=?  where mop='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "This mode of payment don't exists in your record");
                }

            }

            if(cb.equals("DateofPayment")){
                model.setValueAt(Ndata,i, 2);
                String sql= "update febuary set dd='"+Ndata+"' where dd='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                 int n=p.executeUpdate();
                System.out.print("date"+n);
                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Payment Date don't exists in your record");
                }

            }

}
if(cb1.equals("march")){
 
    if(cb.equals("Month")){
                
                String sq= model.getValueAt(i, 0).toString();     //name
                String sw= model.getValueAt(i, 1).toString();       //room no.
                String se= model.getValueAt(i, 2).toString();       //dop   
                String sr= model.getValueAt(i, 3).toString();       //mop
                String st= model.getValueAt(i, 4).toString();       //amount
                String sy= model.getValueAt(i, 5).toString();        //month   
                 model.setValueAt(Ndata,i, 5);
                 String su=model.getValueAt(i,5).toString();      //month(updated)
                String sql= "delete from march where room='"+sw+"' and month='"+Odata+"' and name='"+nm+"'";
                PreparedStatement p=con.prepareStatement(sql);
                int n=p.executeUpdate();
                String sq1="insert into $march(name,room,dd,mop,amount,month) values(?,?,'"+se+"',?,?,?)";
                  String query=sq1.replace("$march", Ndata);
                  PreparedStatement ps=con.prepareStatement(query);
                  ps.setString(1,sq);
                        ps.setString(2,sw);
                        ps.setString(3,sr);
                        ps.setString(4, st);
                        ps.setString(5,su);
                       int ni= ps.executeUpdate();
                        if(n!=0 && ni!=0)
                {
                    JOptionPane.showMessageDialog(null, "SUCCESFULLY CHANGED MONTH FROM "+Odata+" To " +Ndata);

                }

                else{
                    JOptionPane.showMessageDialog(null, "ALREADY UPDATED DATA");
                }

            }

    
            if(cb.equals("Amount")){
                model.setValueAt(Ndata,i, 4);
                String sql= "update march set amount=? where amount=? and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                p.setString(2,Odata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Such Amount dont exist in your record");
                }

            }

            if(cb.equals("ModeofPayment")){
                model.setValueAt(Ndata,i, 3);
                 String sql= "update march set mop=?  where mop='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "This mode of payment don't exists in your record");
                }

            }

            if(cb.equals("DateofPayment")){
                model.setValueAt(Ndata,i, 2);
                String sql= "update march set dd='"+Ndata+"' where dd='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                 int n=p.executeUpdate();
                System.out.print("date"+n);
                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Payment Date don't exists in your record");
                }

            }


}
if(cb1.equals("april")){
 if(cb.equals("Month")){
                
                String sq= model.getValueAt(i, 0).toString();     //name
                String sw= model.getValueAt(i, 1).toString();       //room no.
                String se= model.getValueAt(i, 2).toString();       //dop   
                String sr= model.getValueAt(i, 3).toString();       //mop
                String st= model.getValueAt(i, 4).toString();       //amount
                String sy= model.getValueAt(i, 5).toString();        //month   
                 model.setValueAt(Ndata,i, 5);
                 String su=model.getValueAt(i,5).toString();      //month(updated)
                String sql= "delete from april where room='"+sw+"' and month='"+Odata+"' and name='"+nm+"'";
                PreparedStatement p=con.prepareStatement(sql);
                int n=p.executeUpdate();
                String sq1="insert into $april(name,room,dd,mop,amount,month) values(?,?,'"+se+"',?,?,?)";
                  String query=sq1.replace("$april", Ndata);
                  PreparedStatement ps=con.prepareStatement(query);
                  ps.setString(1,sq);
                        ps.setString(2,sw);
                        ps.setString(3,sr);
                        ps.setString(4, st);
                        ps.setString(5,su);
                       int ni= ps.executeUpdate();
                        if(n!=0 && ni!=0)
                {
                    JOptionPane.showMessageDialog(null, "SUCCESFULLY CHANGED MONTH FROM "+Odata+" To " +Ndata);

                }

                else{
                    JOptionPane.showMessageDialog(null, "ALREADY UPDATED DATA");
                }

            }

    
    
    if(cb.equals("Amount")){
                model.setValueAt(Ndata,i, 4);
                String sql= "update april set amount=? where amount=? and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                p.setString(2,Odata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Such Amount dont exist in your record");
                }

            }

            if(cb.equals("ModeofPayment")){
                model.setValueAt(Ndata,i, 3);
                 String sql= "update april set mop=?  where mop='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "This mode of payment don't exists in your record");
                }

            }

            if(cb.equals("DateofPayment")){
                model.setValueAt(Ndata,i, 2);
                String sql= "update april set dd='"+Ndata+"' where dd='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                 int n=p.executeUpdate();
                System.out.print("date"+n);
                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Payment Date don't exists in your record");
                }

            }

}
if(cb1.equals("may")){
    if(cb.equals("Month")){
                
                String sq= model.getValueAt(i, 0).toString();     //name
                String sw= model.getValueAt(i, 1).toString();       //room no.
                String se= model.getValueAt(i, 2).toString();       //dop   
                String sr= model.getValueAt(i, 3).toString();       //mop
                String st= model.getValueAt(i, 4).toString();       //amount
                String sy= model.getValueAt(i, 5).toString();        //month   
                 model.setValueAt(Ndata,i, 5);
                 String su=model.getValueAt(i,5).toString();      //month(updated)
                String sql= "delete from may where room='"+sw+"' and month='"+Odata+"' and name='"+nm+"'";
                PreparedStatement p=con.prepareStatement(sql);
                int n=p.executeUpdate();
                String sq1="insert into $may(name,room,dd,mop,amount,month) values(?,?,'"+se+"',?,?,?)";
                  String query=sq1.replace("$may", Ndata);
                  PreparedStatement ps=con.prepareStatement(query);
                  ps.setString(1,sq);
                        ps.setString(2,sw);
                        ps.setString(3,sr);
                        ps.setString(4, st);
                        ps.setString(5,su);
                       int ni= ps.executeUpdate();
                        if(n!=0 && ni!=0)
                {
                    JOptionPane.showMessageDialog(null, "SUCCESFULLY CHANGED MONTH FROM "+Odata+" To " +Ndata);

                }

                else{
                    JOptionPane.showMessageDialog(null, "ALREADY UPDATED DATA");
                }

            }

            if(cb.equals("Amount")){
                model.setValueAt(Ndata,i, 4);
                String sql= "update may set amount=? where amount=? and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                p.setString(2,Odata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Such Amount dont exist in your record");
                }

            }

            if(cb.equals("ModeofPayment")){
                model.setValueAt(Ndata,i, 3);
                 String sql= "update may set mop=?  where mop='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "This mode of payment don't exists in your record");
                }

            }

            if(cb.equals("DateofPayment")){
                model.setValueAt(Ndata,i, 2);
                String sql= "update may set dd='"+Ndata+"' where dd='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                 int n=p.executeUpdate();
                System.out.print("date"+n);
                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Payment Date don't exists in your record");
                }

            }


}
if(cb1.equals("june")){
    if(cb.equals("Month")){
                
                String sq= model.getValueAt(i, 0).toString();     //name
                String sw= model.getValueAt(i, 1).toString();       //room no.
                String se= model.getValueAt(i, 2).toString();       //dop   
                String sr= model.getValueAt(i, 3).toString();       //mop
                String st= model.getValueAt(i, 4).toString();       //amount
                String sy= model.getValueAt(i, 5).toString();        //month   
                 model.setValueAt(Ndata,i, 5);
                 String su=model.getValueAt(i,5).toString();      //month(updated)
                String sql= "delete from june where room='"+sw+"' and month='"+Odata+"' and name='"+nm+"'";
                PreparedStatement p=con.prepareStatement(sql);
                int n=p.executeUpdate();
                String sq1="insert into $june(name,room,dd,mop,amount,month) values(?,?,'"+se+"',?,?,?)";
                  String query=sq1.replace("$june", Ndata);
                  PreparedStatement ps=con.prepareStatement(query);
                  ps.setString(1,sq);
                        ps.setString(2,sw);
                        ps.setString(3,sr);
                        ps.setString(4, st);
                        ps.setString(5,su);
                       int ni= ps.executeUpdate();
                        if(n!=0 && ni!=0)
                {
                    JOptionPane.showMessageDialog(null, "SUCCESFULLY CHANGED MONTH FROM "+Odata+" To " +Ndata);

                }

                else{
                    JOptionPane.showMessageDialog(null, "ALREADY UPDATED DATA");
                }

            }

            if(cb.equals("Amount")){
                model.setValueAt(Ndata,i, 4);
                String sql= "update june set amount=? where amount=? and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                p.setString(2,Odata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Such Amount dont exist in your record");
                }

            }

            if(cb.equals("ModeofPayment")){
                model.setValueAt(Ndata,i, 3);
                 String sql= "update june set mop=?  where mop='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "This mode of payment don't exists in your record");
                }

            }

            if(cb.equals("DateofPayment")){
                model.setValueAt(Ndata,i, 2);
                String sql= "update june set dd='"+Ndata+"' where dd='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                 int n=p.executeUpdate();
                System.out.print("date"+n);
                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Payment Date don't exists in your record");
                }

            }

}
if(cb1.equals("july")){
    if(cb.equals("Month")){
                
                String sq= model.getValueAt(i, 0).toString();     //name
                String sw= model.getValueAt(i, 1).toString();       //room no.
                String se= model.getValueAt(i, 2).toString();       //dop   
                String sr= model.getValueAt(i, 3).toString();       //mop
                String st= model.getValueAt(i, 4).toString();       //amount
                String sy= model.getValueAt(i, 5).toString();        //month   
                 model.setValueAt(Ndata,i, 5);
                 String su=model.getValueAt(i,5).toString();      //month(updated)
                String sql= "delete from july where room='"+sw+"' and month='"+Odata+"' and name='"+nm+"'";
                PreparedStatement p=con.prepareStatement(sql);
                int n=p.executeUpdate();
                String sq1="insert into $july(name,room,dd,mop,amount,month) values(?,?,'"+se+"',?,?,?)";
                  String query=sq1.replace("$july", Ndata);
                  PreparedStatement ps=con.prepareStatement(query);
                  ps.setString(1,sq);
                        ps.setString(2,sw);
                        ps.setString(3,sr);
                        ps.setString(4, st);
                        ps.setString(5,su);
                       int ni= ps.executeUpdate();
                        if(n!=0 && ni!=0)
                {
                    JOptionPane.showMessageDialog(null, "SUCCESFULLY CHANGED MONTH FROM "+Odata+" To " +Ndata);

                }

                else{
                    JOptionPane.showMessageDialog(null, "ALREADY UPDATED DATA");
                }

            }

            if(cb.equals("Amount")){
                model.setValueAt(Ndata,i, 4);
                String sql= "update july set amount=? where amount=? and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                p.setString(2,Odata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Such Amount dont exist in your record");
                }

            }


            if(cb.equals("ModeofPayment")){
                model.setValueAt(Ndata,i, 3);
                 String sql= "update july set mop=?  where mop='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "This mode of payment don't exists in your record");
                }

            }

            if(cb.equals("DateofPayment")){
                model.setValueAt(Ndata,i, 2);
                String sql= "update july set dd='"+Ndata+"' where dd='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                 int n=p.executeUpdate();
                System.out.print("date"+n);
                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Payment Date don't exists in your record");
                }

            }

}
if(cb1.equals("august")){
    if(cb.equals("Month")){
                
                String sq= model.getValueAt(i, 0).toString();     //name
                String sw= model.getValueAt(i, 1).toString();       //room no.
                String se= model.getValueAt(i, 2).toString();       //dop   
                String sr= model.getValueAt(i, 3).toString();       //mop
                String st= model.getValueAt(i, 4).toString();       //amount
                String sy= model.getValueAt(i, 5).toString();        //month   
                 model.setValueAt(Ndata,i, 5);
                 String su=model.getValueAt(i,5).toString();      //month(updated)
                String sql= "delete from august where room='"+sw+"' and month='"+Odata+"' and name='"+nm+"'";
                PreparedStatement p=con.prepareStatement(sql);
                int n=p.executeUpdate();
                String sq1="insert into $august(name,room,dd,mop,amount,month) values(?,?,'"+se+"',?,?,?)";
                  String query=sq1.replace("$august", Ndata);
                  PreparedStatement ps=con.prepareStatement(query);
                  ps.setString(1,sq);
                        ps.setString(2,sw);
                        ps.setString(3,sr);
                        ps.setString(4, st);
                        ps.setString(5,su);
                       int ni= ps.executeUpdate();
                        if(n!=0 && ni!=0)
                {
                    JOptionPane.showMessageDialog(null, "SUCCESFULLY CHANGED MONTH FROM "+Odata+" To " +Ndata);

                }

                else{
                    JOptionPane.showMessageDialog(null, "ALREADY UPDATED DATA");
                }

            }

            if(cb.equals("Amount")){
                model.setValueAt(Ndata,i, 4);
                String sql= "update august set amount=? where amount=? and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                p.setString(2,Odata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Such Amount dont exist in your record");
                }

            }

            if(cb.equals("ModeofPayment")){
                model.setValueAt(Ndata,i, 3);
                 String sql= "update august set mop=?  where mop='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "This mode of payment don't exists in your record");
                }

            }

            if(cb.equals("DateofPayment")){
                model.setValueAt(Ndata,i, 2);
                String sql= "update august set dd='"+Ndata+"' where dd='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                 int n=p.executeUpdate();
                System.out.print("date"+n);
                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Payment Date don't exists in your record");
                }

            }
}

if(cb1.equals("september")){
    if(cb.equals("Month")){
                
                String sq= model.getValueAt(i, 0).toString();     //name
                String sw= model.getValueAt(i, 1).toString();       //room no.
                String se= model.getValueAt(i, 2).toString();       //dop   
                String sr= model.getValueAt(i, 3).toString();       //mop
                String st= model.getValueAt(i, 4).toString();       //amount
                String sy= model.getValueAt(i, 5).toString();        //month   
                 model.setValueAt(Ndata,i, 5);
                 String su=model.getValueAt(i,5).toString();      //month(updated)
                String sql= "delete from september where room='"+sw+"' and month='"+Odata+"' and name='"+nm+"'";
                PreparedStatement p=con.prepareStatement(sql);
                int n=p.executeUpdate();
                String sq1="insert into $september(name,room,dd,mop,amount,month) values(?,?,'"+se+"',?,?,?)";
                  String query=sq1.replace("$september", Ndata);
                  PreparedStatement ps=con.prepareStatement(query);
                  ps.setString(1,sq);
                        ps.setString(2,sw);
                        ps.setString(3,sr);
                        ps.setString(4, st);
                        ps.setString(5,su);
                       int ni= ps.executeUpdate();
                        if(n!=0 && ni!=0)
                {
                    JOptionPane.showMessageDialog(null, "SUCCESFULLY CHANGED MONTH FROM "+Odata+" To " +Ndata);

                }

                else{
                    JOptionPane.showMessageDialog(null, "ALREADY UPDATED DATA");
                }

            }

            if(cb.equals("Amount")){
                model.setValueAt(Ndata,i, 4);
                String sql= "update september set amount=? where amount=? and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                p.setString(2,Odata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Such Amount dont exist in your record");
                }

            }

            if(cb.equals("ModeofPayment")){
                model.setValueAt(Ndata,i, 3);
                 String sql= "update september set mop=?  where mop='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "This mode of payment don't exists in your record");
                }

            }

            if(cb.equals("DateofPayment")){
                model.setValueAt(Ndata,i, 2);
                String sql= "update september set dd='"+Ndata+"' where dd='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                 int n=p.executeUpdate();
                System.out.print("date"+n);
                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Payment Date don't exists in your record");
                }

            }
}

if(cb1.equals("october")){
    if(cb.equals("Month")){
                
                String sq= model.getValueAt(i, 0).toString();     //name
                String sw= model.getValueAt(i, 1).toString();       //room no.
                String se= model.getValueAt(i, 2).toString();       //dop   
                String sr= model.getValueAt(i, 3).toString();       //mop
                String st= model.getValueAt(i, 4).toString();       //amount
                String sy= model.getValueAt(i, 5).toString();        //month   
                 model.setValueAt(Ndata,i, 5);
                 String su=model.getValueAt(i,5).toString();      //month(updated)
                String sql= "delete from october where room='"+sw+"' and month='"+Odata+"' and name='"+nm+"'";
                PreparedStatement p=con.prepareStatement(sql);
                int n=p.executeUpdate();
                String sq1="insert into $october(name,room,dd,mop,amount,month) values(?,?,'"+se+"',?,?,?)";
                  String query=sq1.replace("$october", Ndata);
                  PreparedStatement ps=con.prepareStatement(query);
                  ps.setString(1,sq);
                        ps.setString(2,sw);
                        ps.setString(3,sr);
                        ps.setString(4, st);
                        ps.setString(5,su);
                       int ni= ps.executeUpdate();
                        if(n!=0 && ni!=0)
                {
                    JOptionPane.showMessageDialog(null, "SUCCESFULLY CHANGED MONTH FROM "+Odata+" To " +Ndata);

                }

                else{
                    JOptionPane.showMessageDialog(null, "ALREADY UPDATED DATA");
                }

            }

            if(cb.equals("Amount")){
                model.setValueAt(Ndata,i, 4);
                String sql= "update october set amount=? where amount=? and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                p.setString(2,Odata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Such Amount dont exist in your record");
                }

            }

            if(cb.equals("ModeofPayment")){
                model.setValueAt(Ndata,i, 3);
                 String sql= "update october set mop=?  where mop='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "This mode of payment don't exists in your record");
                }

            }

            if(cb.equals("DateofPayment")){
                model.setValueAt(Ndata,i, 2);
                String sql= "update october set dd='"+Ndata+"' where dd='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                 int n=p.executeUpdate();
                System.out.print("date"+n);
                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Payment Date don't exists in your record");
                }

            }

}
if(cb1.equals("november")){
    if(cb.equals("Month")){
                
                String sq= model.getValueAt(i, 0).toString();     //name
                String sw= model.getValueAt(i, 1).toString();       //room no.
                String se= model.getValueAt(i, 2).toString();       //dop   
                String sr= model.getValueAt(i, 3).toString();       //mop
                String st= model.getValueAt(i, 4).toString();       //amount
                String sy= model.getValueAt(i, 5).toString();        //month   
                 model.setValueAt(Ndata,i, 5);
                 String su=model.getValueAt(i,5).toString();      //month(updated)
                String sql= "delete from november where room='"+sw+"' and month='"+Odata+"' and name='"+nm+"'";
                PreparedStatement p=con.prepareStatement(sql);
                int n=p.executeUpdate();
                String sq1="insert into $november(name,room,dd,mop,amount,month) values(?,?,'"+se+"',?,?,?)";
                  String query=sq1.replace("$november", Ndata);
                  PreparedStatement ps=con.prepareStatement(query);
                  ps.setString(1,sq);
                        ps.setString(2,sw);
                        ps.setString(3,sr);
                        ps.setString(4, st);
                        ps.setString(5,su);
                       int ni= ps.executeUpdate();
                        if(n!=0 && ni!=0)
                {
                    JOptionPane.showMessageDialog(null, "SUCCESFULLY CHANGED MONTH FROM "+Odata+" To " +Ndata);

                }

                else{
                    JOptionPane.showMessageDialog(null, "ALREADY UPDATED DATA");
                }

            }

            if(cb.equals("Amount")){
                model.setValueAt(Ndata,i, 4);
                String sql= "update november set amount=? where amount=? and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                p.setString(2,Odata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Such Amount dont exist in your record");
                }

            }

            if(cb.equals("ModeofPayment")){
                model.setValueAt(Ndata,i, 3);
                 String sql= "update november set mop=?  where mop='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "This mode of payment don't exists in your record");
                }

            }

            if(cb.equals("DateofPayment")){
                model.setValueAt(Ndata,i, 2);
                String sql= "update november set dd='"+Ndata+"' where dd='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                 int n=p.executeUpdate();
                System.out.print("date"+n);
                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Payment Date don't exists in your record");
                }

            }

}


if(cb1.equals("december")){
    if(cb.equals("Month")){
                
                String sq= model.getValueAt(i, 0).toString();     //name
                String sw= model.getValueAt(i, 1).toString();       //room no.
                String se= model.getValueAt(i, 2).toString();       //dop   
                String sr= model.getValueAt(i, 3).toString();       //mop
                String st= model.getValueAt(i, 4).toString();       //amount
                String sy= model.getValueAt(i, 5).toString();        //month   
                 model.setValueAt(Ndata,i, 5);
                 String su=model.getValueAt(i,5).toString();      //month(updated)
                String sql= "delete from december where room='"+sw+"' and month='"+Odata+"' and name='"+nm+"'";
                PreparedStatement p=con.prepareStatement(sql);
                int n=p.executeUpdate();
                String sq1="insert into $december(name,room,dd,mop,amount,month) values(?,?,'"+se+"',?,?,?)";
                  String query=sq1.replace("$december", Ndata);
                  PreparedStatement ps=con.prepareStatement(query);
                  ps.setString(1,sq);
                        ps.setString(2,sw);
                        ps.setString(3,sr);
                        ps.setString(4, st);
                        ps.setString(5,su);
                       int ni= ps.executeUpdate();
                        if(n!=0 && ni!=0)
                {
                    JOptionPane.showMessageDialog(null, "SUCCESFULLY CHANGED MONTH FROM "+Odata+" To " +Ndata);

                }

                else{
                    JOptionPane.showMessageDialog(null, "ALREADY UPDATED DATA");
                }

            }

            if(cb.equals("Amount")){
                model.setValueAt(Ndata,i, 4);
                String sql= "update december set amount=? where amount=? and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                p.setString(2,Odata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Such Amount dont exist in your record");
                }

            }

            if(cb.equals("ModeofPayment")){
                model.setValueAt(Ndata,i, 3);
                 String sql= "update december set mop=?  where mop='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                p.setString(1,Ndata);
                int n=p.executeUpdate();

                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "This mode of payment don't exists in your record");
                }

            }

            if(cb.equals("DateofPayment")){
                model.setValueAt(Ndata,i, 2);
                String sql= "update december set dd='"+Ndata+"' where dd='"+Odata+"' and name='"+nm+"' ";
                PreparedStatement p=con.prepareStatement(sql);
                 int n=p.executeUpdate();
                System.out.print("date"+n);
                if(n!=0)
                {
                    JOptionPane.showMessageDialog(null, "UPDATED SUCCESSFULLY");

                }

                else{
                    JOptionPane.showMessageDialog(null, "Payment Date don't exists in your record");
                }

            }
        }
}
        catch(Exception e){
            lb1.setText("Enter Valid Month or Date(YYYY-MM-DD)");

//            JOptionPane.showMessageDialog(null, "Payment Date don't exists in your record");
            e.printStackTrace();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        t1.setText("");
        DefaultTableModel model=(DefaultTableModel)table1.getModel();
        model.setRowCount(0);
        tf3.setText("");
        tf4.setText("");
        cb4.setSelectedIndex(-1);
        cb3.setSelectedIndex(-1);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void cb3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb3ActionPerformed

    private void cb4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        String s1 = null,s2=null,s3=null,s4=null,s5=null,s6=null;

        String month=cb4.getSelectedItem().toString();
        String name=t1.getText();

        try{
            Connection con=Data.connect();
            Statement stmt=con.createStatement();
            if(month.equals("january")){
                String Sql= "select * from january where name='"+name+"' ";

                ResultSet r= stmt.executeQuery(Sql);

                if(r.next()){
                    String sql="select* from january where name=? ";
                    PreparedStatement ps=con.prepareStatement(sql);
                    ps.setString(1,name);

                    ResultSet rs=ps.executeQuery();
                    while(rs.next()){
                      
                         s1=rs.getString(1);
                         s2=rs.getString(2);
                         s3=rs.getString(3);
                         s4=rs.getString(4);
                         s5=rs.getString(5);
                         s6=rs.getString(6);
                         table1.setModel(DbUtils.resultSetToTableModel(rs));
                         DefaultTableModel model=(DefaultTableModel)table1.getModel();
                         Object[] data={s1,s2,s3,s4,s5,s6};                  
                         model.addRow(data);
                    }
                }
                else{
                    DefaultTableModel model=(DefaultTableModel)table1.getModel();
                     model.setRowCount(0);

                    JOptionPane.showMessageDialog(null, "NOT YET DEPOSITED");
                }
            }

            if(month.equals("febuary")){
                String Sql= "select * from febuary where name='"+name+"' ";

                ResultSet r= stmt.executeQuery(Sql);

                if(r.next()){
                    String sql="select* from febuary where name=? ";
                    PreparedStatement ps=con.prepareStatement(sql);
                    ps.setString(1,name);

                    ResultSet rs=ps.executeQuery();
                    while(rs.next()){
                       // table1.setModel(DbUtils.resultSetToTableModel(rs));
                   
                    s1=rs.getString(1);
                         s2=rs.getString(2);
                         s3=rs.getString(3);
                         s4=rs.getString(4);
                         s5=rs.getString(5);
                         s6=rs.getString(6);
                         table1.setModel(DbUtils.resultSetToTableModel(rs));
                         DefaultTableModel model=(DefaultTableModel)table1.getModel();
                         Object[] data={s1,s2,s3,s4,s5,s6};                  
                         model.addRow(data);
                    
                    
                    
                    
                    }
                }
                else{
                    DefaultTableModel model=(DefaultTableModel)table1.getModel();
                     model.setRowCount(0);

                    JOptionPane.showMessageDialog(null, "NOT YET DEPOSITED");

                }
            }
            if(month.equals("march")){
                String Sql= "select * from march where name='"+name+"' ";

                ResultSet r= stmt.executeQuery(Sql);

                if(r.next()){
                    String sql="select* from march where name=? ";
                    PreparedStatement ps=con.prepareStatement(sql);
                    ps.setString(1,name);

                    ResultSet rs=ps.executeQuery();
                    while(rs.next()){
                        s1=rs.getString(1);
                         s2=rs.getString(2);
                         s3=rs.getString(3);
                         s4=rs.getString(4);
                         s5=rs.getString(5);
                         s6=rs.getString(6);
                         table1.setModel(DbUtils.resultSetToTableModel(rs));
                         DefaultTableModel model=(DefaultTableModel)table1.getModel();
                         Object[] data={s1,s2,s3,s4,s5,s6};                  
                         model.addRow(data);
                    }
                }
                else{
                    DefaultTableModel model=(DefaultTableModel)table1.getModel();
                     model.setRowCount(0);

                    JOptionPane.showMessageDialog(null, "NOT YET DEPOSITED");

                }
            }
            if(month.equals("april")){
                String Sql= "select * from april where name='"+name+"' ";

                ResultSet r= stmt.executeQuery(Sql);

                if(r.next()){
                    String sql="select* from april where name=? ";
                    PreparedStatement ps=con.prepareStatement(sql);
                    ps.setString(1,name);

                    ResultSet rs=ps.executeQuery();
                    while(rs.next()){
                        s1=rs.getString(1);
                         s2=rs.getString(2);
                         s3=rs.getString(3);
                         s4=rs.getString(4);
                         s5=rs.getString(5);
                         s6=rs.getString(6);
                         table1.setModel(DbUtils.resultSetToTableModel(rs));
                         DefaultTableModel model=(DefaultTableModel)table1.getModel();
                         Object[] data={s1,s2,s3,s4,s5,s6};                  
                         model.addRow(data);
                    }
                }
                else{
                    DefaultTableModel model=(DefaultTableModel)table1.getModel();
                     model.setRowCount(0);

                    JOptionPane.showMessageDialog(null, "NOT YET DEPOSITED");

                }
            }
            if(month.equals("may")){
                String Sql= "select * from may where name='"+name+"' ";

                ResultSet r= stmt.executeQuery(Sql);

                if(r.next()){
                    String sql="select* from may where name=? ";
                    PreparedStatement ps=con.prepareStatement(sql);
                    ps.setString(1,name);

                    ResultSet rs=ps.executeQuery();
                    while(rs.next()){
                        s1=rs.getString(1);
                         s2=rs.getString(2);
                         s3=rs.getString(3);
                         s4=rs.getString(4);
                         s5=rs.getString(5);
                         s6=rs.getString(6);
                         table1.setModel(DbUtils.resultSetToTableModel(rs));
                         DefaultTableModel model=(DefaultTableModel)table1.getModel();
                         Object[] data={s1,s2,s3,s4,s5,s6};                  
                         model.addRow(data);
                    }
                }
                else{
                    DefaultTableModel model=(DefaultTableModel)table1.getModel();
                     model.setRowCount(0);

                    JOptionPane.showMessageDialog(null, "NOT YET DEPOSITED");

                }
            }
            if(month.equals("june")){
                String Sql= "select * from june where name='"+name+"' ";

                ResultSet r= stmt.executeQuery(Sql);

                if(r.next()){
                    String sql="select* from june where name=? ";
                    PreparedStatement ps=con.prepareStatement(sql);
                    ps.setString(1,name);

                    ResultSet rs=ps.executeQuery();
                    while(rs.next()){
                        s1=rs.getString(1);
                         s2=rs.getString(2);
                         s3=rs.getString(3);
                         s4=rs.getString(4);
                         s5=rs.getString(5);
                         s6=rs.getString(6);
                         table1.setModel(DbUtils.resultSetToTableModel(rs));
                         DefaultTableModel model=(DefaultTableModel)table1.getModel();
                         Object[] data={s1,s2,s3,s4,s5,s6};                  
                         model.addRow(data);
                    }
                }
                else{
                    DefaultTableModel model=(DefaultTableModel)table1.getModel();
                     model.setRowCount(0);

                    JOptionPane.showMessageDialog(null, "NOT YET DEPOSITED");

                }
            }
            if(month.equals("july")){
                String Sql= "select * from july where name='"+name+"' ";

                ResultSet r= stmt.executeQuery(Sql);

                if(r.next()){
                    String sql="select* from july where name=? ";
                    PreparedStatement ps=con.prepareStatement(sql);
                    ps.setString(1,name);

                    ResultSet rs=ps.executeQuery();
                    while(rs.next()){
                        s1=rs.getString(1);
                         s2=rs.getString(2);
                         s3=rs.getString(3);
                         s4=rs.getString(4);
                         s5=rs.getString(5);
                         s6=rs.getString(6);
                         table1.setModel(DbUtils.resultSetToTableModel(rs));
                         DefaultTableModel model=(DefaultTableModel)table1.getModel();
                         Object[] data={s1,s2,s3,s4,s5,s6};                  
                         model.addRow(data);
                    }
                }
                else{
                    DefaultTableModel model=(DefaultTableModel)table1.getModel();
                     model.setRowCount(0);

                    JOptionPane.showMessageDialog(null, "NOT YET DEPOSITED");

                }
            }
            if(month.equals("august")){
                String Sql= "select * from august where name='"+name+"' ";

                ResultSet r= stmt.executeQuery(Sql);

                if(r.next()){
                    String sql="select* from august where name=? ";
                    PreparedStatement ps=con.prepareStatement(sql);
                    ps.setString(1,name);

                    ResultSet rs=ps.executeQuery();
                    while(rs.next()){
                        s1=rs.getString(1);
                         s2=rs.getString(2);
                         s3=rs.getString(3);
                         s4=rs.getString(4);
                         s5=rs.getString(5);
                         s6=rs.getString(6);
                         table1.setModel(DbUtils.resultSetToTableModel(rs));
                         DefaultTableModel model=(DefaultTableModel)table1.getModel();
                         Object[] data={s1,s2,s3,s4,s5,s6};                  
                         model.addRow(data);
                    }
                }
                else{
                    DefaultTableModel model=(DefaultTableModel)table1.getModel();
                     model.setRowCount(0);

                    JOptionPane.showMessageDialog(null, "NOT YET DEPOSITED");

                }
            }
            if(month.equals("september")){
                String Sql= "select * from september where name='"+name+"' ";

                ResultSet r= stmt.executeQuery(Sql);

                if(r.next()){
                    String sql="select* from september where name=? ";
                    PreparedStatement ps=con.prepareStatement(sql);
                    ps.setString(1,name);

                    ResultSet rs=ps.executeQuery();
                    while(rs.next()){
                        s1=rs.getString(1);
                         s2=rs.getString(2);
                         s3=rs.getString(3);
                         s4=rs.getString(4);
                         s5=rs.getString(5);
                         s6=rs.getString(6);
                         table1.setModel(DbUtils.resultSetToTableModel(rs));
                         DefaultTableModel model=(DefaultTableModel)table1.getModel();
                         Object[] data={s1,s2,s3,s4,s5,s6};                  
                         model.addRow(data);
                    }
                }
                else{
                    DefaultTableModel model=(DefaultTableModel)table1.getModel();
                     model.setRowCount(0);

                    JOptionPane.showMessageDialog(null, "NOT YET DEPOSITED");

                }
            }
            if(month.equals("october")){
                String Sql= "select * from october where name='"+name+"' ";

                ResultSet r= stmt.executeQuery(Sql);

                if(r.next()){
                    String sql="select* from october where name=? ";
                    PreparedStatement ps=con.prepareStatement(sql);
                    ps.setString(1,name);

                    ResultSet rs=ps.executeQuery();
                    while(rs.next()){
                        s1=rs.getString(1);
                         s2=rs.getString(2);
                         s3=rs.getString(3);
                         s4=rs.getString(4);
                         s5=rs.getString(5);
                         s6=rs.getString(6);
                         table1.setModel(DbUtils.resultSetToTableModel(rs));
                         DefaultTableModel model=(DefaultTableModel)table1.getModel();
                         Object[] data={s1,s2,s3,s4,s5,s6};                  
                         model.addRow(data);
                    }
                }
                else{
                    DefaultTableModel model=(DefaultTableModel)table1.getModel();
                     model.setRowCount(0);

                    JOptionPane.showMessageDialog(null, "NOT YET DEPOSITED");

                }
            }
            if(month.equals("november")){
                String Sql= "select * from november where name='"+name+"' ";

                ResultSet r= stmt.executeQuery(Sql);

                if(r.next()){
                    String sql="select* from november where name=? ";
                    PreparedStatement ps=con.prepareStatement(sql);
                    ps.setString(1,name);

                    ResultSet rs=ps.executeQuery();
                    while(rs.next()){
                        s1=rs.getString(1);
                         s2=rs.getString(2);
                         s3=rs.getString(3);
                         s4=rs.getString(4);
                         s5=rs.getString(5);
                         s6=rs.getString(6);
                         table1.setModel(DbUtils.resultSetToTableModel(rs));
                         DefaultTableModel model=(DefaultTableModel)table1.getModel();
                         Object[] data={s1,s2,s3,s4,s5,s6};                  
                         model.addRow(data);
                    }
                }
                else{
                    DefaultTableModel model=(DefaultTableModel)table1.getModel();
                     model.setRowCount(0);

                    JOptionPane.showMessageDialog(null, "NOT YET DEPOSITED");

                }
            }
            if(month.equals("december")){
                String Sql= "select * from december where name='"+name+"' ";

                ResultSet r= stmt.executeQuery(Sql);

                if(r.next()){
                    String sql="select* from december where name=? ";
                    PreparedStatement ps=con.prepareStatement(sql);
                    ps.setString(1,name);

                    ResultSet rs=ps.executeQuery();
                    while(rs.next()){
                        s1=rs.getString(1);
                         s2=rs.getString(2);
                         s3=rs.getString(3);
                         s4=rs.getString(4);
                         s5=rs.getString(5);
                         s6=rs.getString(6);
                         table1.setModel(DbUtils.resultSetToTableModel(rs));
                         DefaultTableModel model=(DefaultTableModel)table1.getModel();
                         Object[] data={s1,s2,s3,s4,s5,s6};                  
                         model.addRow(data);
                    }
                }
                else{
                    DefaultTableModel model=(DefaultTableModel)table1.getModel();
                     model.setRowCount(0);

                    JOptionPane.showMessageDialog(null, "NOT YET DEPOSITED");

                }
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Modify2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Modify2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Modify2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Modify2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Modify2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cb1;
    private javax.swing.JComboBox cb3;
    private javax.swing.JComboBox cb4;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lb1;
    private javax.swing.JTextField t1;
    private javax.swing.JTable table1;
    private javax.swing.JTextField tf1;
    private javax.swing.JTextField tf2;
    private javax.swing.JTextField tf3;
    private javax.swing.JTextField tf4;
    // End of variables declaration//GEN-END:variables
}
